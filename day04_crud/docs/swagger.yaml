basePath: /
host: localhost:8081
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a simple CRUD API with Gin, JWT, and MySQL.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Simple CRUD API
  version: "1.0"
paths:
  /register:
    post:
      consumes:
      - multipart/form-data
      description: This endpoint registers a new user by accepting their name, username,
        password, and photo.
      parameters:
      - description: Name of the user
        in: formData
        name: name
        required: true
        type: string
      - description: Username of the user
        in: formData
        name: username
        required: true
        type: string
      - description: Password of the user
        in: formData
        name: password
        required: true
        type: string
      - description: Photo of the user
        in: formData
        name: photo
        required: true
        type: file
      produces:
      - application/json
      responses: {}
      summary: Register a new user
      tags:
      - users
  /users:
    get:
      description: Get a list of all users from the database
      produces:
      - application/json
      responses: {}
      summary: List all users
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a user by their ID, including their photo file if it exists
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Delete a user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Get details of a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      summary: Get user details
      tags:
      - users
    patch:
      consumes:
      - multipart/form-data
      description: Update a user's name and optionally their photo
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User Name
        in: formData
        name: name
        required: true
        type: string
      - description: User Photo
        in: formData
        name: photo
        type: file
      produces:
      - application/json
      responses: {}
      summary: Update a user's information
      tags:
      - users
swagger: "2.0"
